name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Grant execute permission for Gradle Wrapper
      run: chmod +x ./gradlew

    # ✅ `application-template.properties`를 `application.properties`로 복사
    - name: Copy application-template.properties to application.properties
      run: cp src/main/resources/application-template.properties src/main/resources/application.properties

    # ✅ 환경 변수 설정 (secrets를 직접 `env`에 주입)
    - name: Set environment variables
      env:
        DB_URL: ${{ secrets.DB_URL }}
        DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
        OPEN_AI_API_URL: ${{ secrets.OPEN_AI_API_URL }}

    # ✅ 환경 변수 디버깅
    - name: Debug environment variables
      run: |
        echo "DB_URL=$DB_URL"
        echo "DB_USER_NAME=$DB_USER_NAME"
        echo "DB_PASSWORD=$DB_PASSWORD"
        echo "Checking application.properties contents:"
        cat src/main/resources/application.properties || echo "No application.properties found!"

    # ✅ Gradle 빌드 실행
    - name: Build with Gradle Wrapper
      run: ./gradlew build --info
